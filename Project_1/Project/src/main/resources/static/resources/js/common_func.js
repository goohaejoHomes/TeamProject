//====================================================================
// 매개변수로 들어온 데이터가 비어있거나 공백으로 구성되어 있으면
// true 를 리턴 , 아니면 false 리턴하는 함수 선언 
//====================================================================
function isEmpty(str) {

	var flag = false;
	//----------------------------------------------------------------
	// try 구문 선언. try 구문 안에는 예외 발생 가능성 있는 코드가 삽입됨 
	//----------------------------------------------------------------
	try {     
		if (str.split(" ").join("") == "") {  // str문자열 매개변수를 받아서 공백으로 쪼갠다음에(split) 다시 공백으로 붙이면(join) 
											 // 아무것도없다 (== "") 라는 뜻 
			flag = true;
		// 매개변수로 들어온 문자가 길이가 없거나 공백으로 이뤄져있으면
		// flag 변수에 true 저장하기 
		}

	}
	//----------------------------------------------------------------
	// catch 구문 선언
	// catch 구문 안에는 try 구문에서 예외발생 시 실행할 코드가 삽입됨 
	// catch 구문의 매개변수 e 에는 예외를 관리하는 객체의 메모리 위치 주소값이 들어온다
	// catch(~){~} 구문은 try 구문에서 예외 발생시 호출하는 일종의 함수와 비슷하다 
	//----------------------------------------------------------------
	catch (e) {     // e 예외를 관리하는 객체가 들어옴 
		alert("isEmpty 함수 호출 시 예외가 발생" + e.message); // e의 속성변수 message
		flag = false;
	}
	//----------------------------------------------------------------
	// flag 변수 안의 데이터를 리턴하기 
	//----------------------------------------------------------------
	return flag; // 함수 중단하기. 이 이후 코딩은 실행되지 않는다 
}

//================================================================================

/*	[잘못된 건 아닌데 try 구문과 catch 구문이 독단적이라 추천하진 않음] 

		try {
			var flag = false;
			if (str.split(" ").join("") == "") {  // str문자열 매개변수를 받아서 공백으로 쪼갠다음에(split) 다시 공백으로 붙이면(join) 
												  // 아무것도없다 (== "") 라는 뜻 
				flag = true;
			
				}
			return flag;   // flag 의 리턴데이터값 true or false 
				} 
		catch(e) {     // e 예외를 관리하는 객체가 들어옴 
			alert("isEmpty 함수 호출 시 예외가 발생" + e.message) // e의 속성변수 message
			return false; 
		}

}
*/



//====================================================================
// 이메일 체크 함수 선언
// 매개변수로 들어온 이메일 문자가 이메일 문자 패턴에 맞으면 true 리턴하기 
// 틀리면 false 리턴하기 
//====================================================================
function isValidEmail(email) { // email: 검사할 문자열 , 즉 이메일 문자열이 저장되는 매개변수
	
	var flag = false;
	try {
		//------------------------------------------------------------
		// 이메일 문자의 패턴을 관리하는 RegExp 객체 생성하기
		// RegExp 객체의 test 메서드를 호출하여 매개변수로 들어온 문자의
		// 이메일 문자 패턴에 맞는지 여부를 구해 flag 변수에 저장하기 
		//------------------------------------------------------------
		var regExp = new RegExp(/^([0-9a-zA-Z_-]+)@([0-9a-zA-Z_-]+)(\.[0-9a-zA-Z_-]+){1,2}$/);
		flag = regExp.test(email);
	}
	catch(e) {
		alert("isValidEmail 함수 호출 시 예외발생" + e.message)
		flag = false;
	}
	//------------------------------------------------------------
	// flag 변수안의 데이터를 리턴하기
	//------------------------------------------------------------
	return flag;
}




//====================================================================
// 문자열의 패턴 체크 함수 선언
// 매개변수로 들어온 RegExp 객체와 검사문자열을 이용하여 
// 검사 문자열이 RegExp 객체가 관리하는 문자 패턴에 맞으면 true 리턴하기
// 틀리면 false 리턴하기 
//====================================================================
function isValidPattern(regExpObj, targetStr) {
	// regExpObj : RegExp 객체의 메모리 위치 주소값이 저장되는 매개변수
	// targetStr : 패턴을 검사할 문자열이 저장되는 매개변수
	
	var flag = false;
	try {
		flag = regExpObj.test(targetStr);
	}
	catch(e) {
		alert("isValidPattern 함수 호출 시 예외 발생" + e.message);
		flag = false;
	}
	return flag;

}



/*
//====================================================================
// checkbox 또는 radio 의 체크 개수를 구해서 리턴하는 함수 선언 
//====================================================================
function getCheckedCnt(arrObj) { // Array 객체의 메모리 위치 주소값이 저장되는 매개변수 선언.
								// Array 객체 안의 배열변수 안에는  Radio 객체 또는 checkbox 객체의 메모리 위치 주소값이 들어있다

	// len 변수 선언하고 매개변수로 들어온 Array 객체의 배열변수 개수를 구해 저장하기
	var len = arrObj.length;

	// len 변수안의 데이터가 undefined면  즉, 매개변수로 Array 객체가 안들어오고 
	// 다른 객체 즉, Checkbox 객체 또는 Radio 객체가 들어오면 
	// 존재하지 않는 length 라는 속성변수에는 undefined가 들어 있다 
	// Radio 객체 또는 Checkbox 객체의 메모리 위치주소값 상상도를 살펴봐야 한다 
	if(len == undefined) {
		if(arrObj.checked == false) {
			return 0;	// 체크박스 0개를 리턴 (체크가 안 됐으니까 0개 )
		}
		else {
			return 1;	// 체크박스 1개를 리턴 (어차피 체크박스 1개니까 체크 된 경우 1개)
		}
	}
	// 자바스크립트는 어떤 다른 객체가 갖고있는 속성변수를 달라고하면 에러가 안나고 undefined를 리턴한다
	// 자바스크립트는 어떤 객체가 소유하고 있지 않은 속성변수 달라고 하면 에러 안나고 undefined를 준다







	// Radio 또는 checkbox의 체크 개수가 저장되는 변수 checkedCnt 선언하고 0 저장
	var checkedCnt = 0;
	// 반복문 선언. 반복문은 0부터 len변수 안의 배열변수 개수 미만만큼 돈다 
	// 반복문을 돌려서 Array 객체의 배열변수 안에 저장된 Radio 객체 또는 checkbox 객체에 접근하기 위함
	for(var i = 0 ; i < len ; i++) {
		// 만약 i번째 배열변수 안에 Radio 객체 또는 checkbox 객체의 속성변수 checked에 
		// true 가 저장되어 있으면 checkedCnt 변수 안의 숫자를 1 증가 
		// 즉 i 번째 Radio 또는 checkbox 입력양식에 체크가 되어 있으면 
		// checkedCnt 변수 안의 숫자를 1 증가 
		if(arrObj[i].checked) {
			checkedCnt++;
		}
	}
	// checkedCnt 변수 안의 데이터 리턴하기. 즉 Radio 또는 checkbox 입력양식에 체크 개수 리턴하기
	return checkedCnt;

}
*/
function getCheckedCnt(arrObj) {

	var checkedCnt = 0;
	try {
		var len = arrObj.length  
	
		if (len == undefined) {
			if (arrObj.checked == false) {
				return 0;
			} else {
				return 1;
			}
		}

		for (var i = 0; i < len; i++) {
			if (arrObj[i].checked == true) { checkedCnt++; }
		}
	} catch (e) {
		alert("getCheckedCnt 함수 호출 시 에러가 발생했음");
		checkedCnt = 0;
	}
	return checkedCnt;
}


//--------------------------------------------------------------------
// 현재 시각의 요일을 리턴하는 함수 선언 
//--------------------------------------------------------------------
function getTodayWeek() {
	//--------------------------------------------------------------------
	// today 변수 선언. 현재 날짜를 관리하는 Date 객체 생성.
	// Date 객체의 메모리 위치 주소값을 today 변수에 저장 
	//--------------------------------------------------------------------
	var today = new Date();
	//--------------------------------------------------------------------
	// weekNo 변수 선언. Date 객체의 getDay 메서드 호출하여 현재 요일 번호 얻어
	// weekNo 변수에 저장하기 
	//--------------------------------------------------------------------
	var weekNo = today.getDay();
	//--------------------------------------------------------------------
	// week 변수 선언. "일요일" 저장하기
	//--------------------------------------------------------------------
	var week = "일요일";
	//--------------------------------------------------------------------
	// 요일 번호에 따라 week 변수에 오늘 요일 문자 저장하기 
	//--------------------------------------------------------------------
	if (weekNo == 1) {
		week = "월요일";
	}
	else if (weekNo == 2) {
		week = "화요일";
	}
	else if (weekNo == 3) {
		week = "수요일";
	}
	else if (weekNo == 4) {
		week = "목요일";
	}
	else if (weekNo == 5) {
		week = "금요일";
	}
	else if (weekNo == 6) {
		week = "토요일";
	}
	//--------------------------------------------------------------------
	// 오늘 요일 문자 리턴하기 
	//--------------------------------------------------------------------
	return week; 
}

/*
//--------------------------------------------------------------------
// 위 함수는 아래처럼도 가능하다 
//--------------------------------------------------------------------
function getTodayWeek() {
	return ["일요일","월요일", "화요일", "수요일","목요일","금요일","토요일"][new Date().getDay()]
}
*/


//--------------------------------------------------------------------
// 현재 시각의 년-월-일(요일) 을 문자로 리턴하는 함수 선언. 
//--------------------------------------------------------------------
function getTodayYMDW() {
	//----------------------------------
	// today 변수 선언. 현재 날짜를 관리하는 Date 객체 생성. 
	// Date 객체의 메모리 위치 주소값을 today 변수에 저장
	//----------------------------------
	var today = new Date();
	var year = today.getFullYear();
	var month = today.getMonth() + 1;
		if(month < 10) {
			month = "0" + month;
		}
	var date = today.getDate();
		if (date < 10) {
			date = "0" + date;
		}
	var week = getTodayWeek().replace("요일","");
	//----------------------------------
	// 현재 시각의 년-월-일(요일) 을 문자로 리턴하기. 
	//----------------------------------
	return year + "-" + month + "-" + date + "(" + week + ")";
}

//--------------------------------------------------------------------
// 매개변수로 들어온 날짜문자가 오늘날짜와 동일하면 true 리턴하는 함수
// 아니면 false 리턴 
//--------------------------------------------------------------------
function isToday(dateStr) {   // 날짜문자니까 dateStr
try {
	//--------------------------------------------------------------------
	// 변수 arr 선언. dateStr 매개변수 안의 날짜 문자를 - 기준으로 토막내어
	// Array 객체 안에 담기 
	//--------------------------------------------------------------------
	var arr = dateStr.split("-")  // 년-월-일을 배열변수로 쪼갬 
	//--------------------------------------------------------------------
	// Array 객체 안의 배열변수 안에 데이터 꺼내어 year,month,date 변수에 저장하기
	// String 객체의 trim 메서드 호출로 앞 뒤 공백 제거하기 
	//--------------------------------------------------------------------
	var year = arr[0];       	// year = year.trim();
	var month = arr[1]; 		// month = month.trim();
	var date = arr[2]; 			// date = date.trim();
	//--------------------------------------------------------------------
	// parseInt 라는 내장 함수를 호출하여 
	// year , month , date 변수 안의 숫자문자를 정수 숫자로 바꾸기
	//--------------------------------------------------------------------
	year = parseInt(year,10);
	month = parseInt(month,10);
	date = parseInt(date,10);
	//--------------------------------------------------------------------
	// 변수 today 선언. 오늘 날짜를 관리하는 Date 객체 생성하고 
	// 메모리 위치 주소값을 변수 today에 저장하기 
	// Date 객체의 getFullYear 메서드를 호출하여 년도 얻어 변수 today_year에 저장하기
	// Date 객체의 getMonth 메서드를 호출하여 년도 얻어 변수 today_month에 저장하기
	// Date 객체의 getDate 메서드를 호출하여 년도 얻어 변수 today_date에 저장하기
	//--------------------------------------------------------------------
	var today = new Date();
	var today_year = today.getFullYear();
	var today_month = today.getMonth() + 1;
	var today_date = today.getDate(); 
	//--------------------------------------------------------------------
	// 매개변수로 들어온 년월일 이 오늘 날짜의 년월일과 동일하면 true 리턴하기
	// 아니면 false 리턴하기 
	//--------------------------------------------------------------------
	return year == today_year && month == today_month && date == today_date;
	}
	catch(e) {
		alert("isToday 에서 에러발생");
		return false;
	}

}

//--------------------------------------------------------------------
// 매개변수로 들어온 문자에서 모든 공백을 제거하고 난 후의 문자 리턴하기
//--------------------------------------------------------------------
function deleteBlank(str) {
try { 
	//------------------------------------------
	// 공백 제거한 문자를 저장할 변수 result 선언
	//------------------------------------------
	var result = "";
	//------------------------------------------
	// 반복문 돌리면서 매개변수로 들어온 문자열 중 한개씩 접근해서
	// 공백이 아닌 문자만 result 변수에 누적시키기    
	//------------------------------------------
	for(var i = 0; i < str.length; i++) {
		// 만약 i 번째 문자가 공백이 아니면 i 번째 문자를 result 변수에 누적시키기  
		if(str.charAt(i) != " ") {
			result = result + str.charAt(i);
			// 공백이 아닌 놈만 문자 하나하나 끄집어 내서 문자 누적
		}
	}
	//------------------------------------------
	// 변수 result 안의 데이터 리턴하기 
	//------------------------------------------
	return result;
	// return str.split(" ").join("");
	} catch(e) {
		alert("deleteBlank 함수에서 에러 발생")
		return str;
	}
}

//------------------------------------------------------------
// 주영일 get_dDay
//------------------------------------------------------------
function get_dDay(dateStr) {
	try {
		//------------------------------------------------------------
		// 변수 arr 선언. dateStr 매개변수 안의 날짜문자를 - 기준으로 분해하여 Array 객체 안에 담기
		//------------------------------------------------------------
		var arr = dateStr.split("-");
		//------------------------------------------------------------
		// Array 객체 안의 배열변수 안의 데이터 꺼내어 year, month, date 변수에 저장하기
		//------------------------------------------------------------
		var year = arr[0];
		var month = arr[1];
		var date = arr[2];
		//------------------------------------------------------------
		// deleteBlank 메소드 호출로 앞뒤 공백 제거
		//------------------------------------------------------------
		year = deleteBlank(year);
		month = deleteBlank(month);
		date = deleteBlank(date);
		//------------------------------------------------------------
		// parseInt 라는 내장 함수를 호출하여
		// year, month, date 변수 안의 숫자문자를 정수 숫자로 바꾸기
		//------------------------------------------------------------
		year = parseInt(year, 10)
		month = parseInt(month, 10)
		date = parseInt(date, 10)
		//------------------------------------------------------------
		// today변수 선언. 오늘 날짜를 저장
		//------------------------------------------------------------
		var today = new Date();
		//------------------------------------------------------------
		// furtureDay 선언. 매개변수로 들어온 날짜 저장
		// 월은 0부터 시작하기 때문에 -1
		//------------------------------------------------------------
		var furtureDay = new Date(year, month - 1, date);
		//------------------------------------------------------------
		// getTime으로 두 날짜에 차이를 구하고 Math.ceil로 소수점 삭제
		//------------------------------------------------------------
		var dDay = Math.ceil((furtureDay.getTime() - today.getTime()) / (1000 * 60 * 60 * 24));
		//------------------------------------------------------------
		// dDay에 저장된 데이터 리턴
		//------------------------------------------------------------
		return dDay;
	}
	catch (e) {
		alert("get_dDay 함수 호출 시 에러가 발생" + e.message)
		return -1;
	}
}


//------------------------------------------------------------
// 강사 get_dDay
//------------------------------------------------------------
function get_dDay(dateStr){
	try {
		//------------------------------------------------------------
		// 변수 arr 선언. dateStr 매개변수 안의 날짜 문자를 - 기준으로 토막내어
		// Array 객체 안에 담기
		//------------------------------------------------------------
		var arr = dateStr.split("-");
		//------------------------------------------------------------
		// Array 객체 안의 배열변수 안의 데이터 꺼내어 year,month,date 변수에 저장하기
		// String 객체의 trim 메서드 호출로 앞뒤 공백 제거하기
		//------------------------------------------------------------
		var year = arr[0];
		var month = arr[1];
		var date = arr[2];
		//------------------------------------------------------------
		// parseInt 라는 내장 함수를 호출하여
		// year , month , date 변수 안의 숫자문자를 정수 숫자로 바꾸기
		//------------------------------------------------------------
		year = parseInt(year,10);
		month = parseInt(month,10);
		date = parseInt(date,10);
		//------------------------------------------------------------
		// 임의의 날짜를 관리하는 Date 객체 생성하고 변수 xDay에 저장하기
		// 오늘 날짜를 관리하는 Date 객체 생성하고 변수 today에 저장하기
		//------------------------------------------------------------
		var xDay = new Date(year,month-1,date);
		var today = new Date();
		//------------------------------------------------------------
		// 오늘 날짜와 임의의 날짜의 차이를 일수로 얻고 소수점 첫째자리를 올린 후 
		// 변수 interval 에 저장하기 
		//------------------------------------------------------------
		var interval = (xDay.getTime()-today.getTime()) / (1000*60*60*24);
		//------------------------------------------------------------
		// interval 변수 안의 데이터 리턴하기
		//------------------------------------------------------------
		return Math.ceil(interval);
	}
	catch(e){
		alert("get_dDay 함수에서 에러발생" + e.message)
		return -1; // 0 이상 나오면 dDay가 있는거니까 
	}

}


//------------------------------------------------------------
// 매개변수로 들어온 한글 이름이 한글이면서 2~20자 사이면 true 리턴하는 함수 선언
// 아니면 false 리턴하기 
//------------------------------------------------------------
function isLanguage(isLanguage) {
	return isValidPattern(/^[가-힣a-zA-z]{2,20}$/, isLanguage);
}

function isCheck_id(mem_id) {
	return isValidPattern(/^[a-z][a-z0-9]{4,15}$/, mem_id);
}

function is_pwd(mem_pwd) {
	return isValidPattern(/^(?=.*[A-Za-z])(?=.*\d)(?=.*[~!@#$%^&*()+|=])[A-Za-z\d~!@#$%^&*()+|=]{8,16}$/, mem_pwd);
}

function is_Phone(phone) {
	return isValidPattern(/^(010|011|016|017|018|019)[0-9]{3,4}[0-9]{4}$/, phone);
}
//====================================================================
// 매개변수로 들어온 데이터가 비어있거나 공백으로 구성되어 있으면
// true 를 리턴 , 아니면 false 리턴하는 함수 선언 
//====================================================================
function isEmpty(str) {

   var flag = false;
   //----------------------------------------------------------------
   // try 구문 선언. try 구문 안에는 예외 발생 가능성 있는 코드가 삽입됨 
   //----------------------------------------------------------------
   try {     
      if (str.split(" ").join("") == "") {  // str문자열 매개변수를 받아서 공백으로 쪼갠다음에(split) 다시 공백으로 붙이면(join) 
                                  // 아무것도없다 (== "") 라는 뜻 
         flag = true;
      // 매개변수로 들어온 문자가 길이가 없거나 공백으로 이뤄져있으면
      // flag 변수에 true 저장하기 
      }

   }
   //----------------------------------------------------------------
   // catch 구문 선언
   // catch 구문 안에는 try 구문에서 예외발생 시 실행할 코드가 삽입됨 
   // catch 구문의 매개변수 e 에는 예외를 관리하는 객체의 메모리 위치 주소값이 들어온다
   // catch(~){~} 구문은 try 구문에서 예외 발생시 호출하는 일종의 함수와 비슷하다 
   //----------------------------------------------------------------
   catch (e) {     // e 예외를 관리하는 객체가 들어옴 
      alert("isEmpty 함수 호출 시 예외가 발생" + e.message); // e의 속성변수 message
      flag = false;
   }
   //----------------------------------------------------------------
   // flag 변수 안의 데이터를 리턴하기 
   //----------------------------------------------------------------
   return flag; // 함수 중단하기. 이 이후 코딩은 실행되지 않는다 
}

//================================================================================

/*   [잘못된 건 아닌데 try 구문과 catch 구문이 독단적이라 추천하진 않음] 

      try {
         var flag = false;
         if (str.split(" ").join("") == "") {  // str문자열 매개변수를 받아서 공백으로 쪼갠다음에(split) 다시 공백으로 붙이면(join) 
                                      // 아무것도없다 (== "") 라는 뜻 
            flag = true;
         
            }
         return flag;   // flag 의 리턴데이터값 true or false 
            } 
      catch(e) {     // e 예외를 관리하는 객체가 들어옴 
         alert("isEmpty 함수 호출 시 예외가 발생" + e.message) // e의 속성변수 message
         return false; 
      }

}
*/



//====================================================================
// 이메일 체크 함수 선언
// 매개변수로 들어온 이메일 문자가 이메일 문자 패턴에 맞으면 true 리턴하기 
// 틀리면 false 리턴하기 
//====================================================================
function isValidEmail(email) { // email: 검사할 문자열 , 즉 이메일 문자열이 저장되는 매개변수
   
   var flag = false;
   try {
      //------------------------------------------------------------
      // 이메일 문자의 패턴을 관리하는 RegExp 객체 생성하기
      // RegExp 객체의 test 메서드를 호출하여 매개변수로 들어온 문자의
      // 이메일 문자 패턴에 맞는지 여부를 구해 flag 변수에 저장하기 
      //------------------------------------------------------------
      var regExp = new RegExp(/^([0-9a-zA-Z_-]+)@([0-9a-zA-Z_-]+)(\.[0-9a-zA-Z_-]+){1,2}$/);
      flag = regExp.test(email);
   }
   catch(e) {
      alert("isValidEmail 함수 호출 시 예외발생" + e.message)
      flag = false;
   }
   //------------------------------------------------------------
   // flag 변수안의 데이터를 리턴하기
   //------------------------------------------------------------
   return flag;
}




//====================================================================
// 문자열의 패턴 체크 함수 선언
// 매개변수로 들어온 RegExp 객체와 검사문자열을 이용하여 
// 검사 문자열이 RegExp 객체가 관리하는 문자 패턴에 맞으면 true 리턴하기
// 틀리면 false 리턴하기 
//====================================================================
function isValidPattern(regExpObj, targetStr) {
   // regExpObj : RegExp 객체의 메모리 위치 주소값이 저장되는 매개변수
   // targetStr : 패턴을 검사할 문자열이 저장되는 매개변수
   
   var flag = false;
   try {
      flag = regExpObj.test(targetStr);
   }
   catch(e) {
      alert("isValidPattern 함수 호출 시 예외 발생" + e.message);
      flag = false;
   }
   return flag;

}



/*
//====================================================================
// checkbox 또는 radio 의 체크 개수를 구해서 리턴하는 함수 선언 
//====================================================================
function getCheckedCnt(arrObj) { // Array 객체의 메모리 위치 주소값이 저장되는 매개변수 선언.
                        // Array 객체 안의 배열변수 안에는  Radio 객체 또는 checkbox 객체의 메모리 위치 주소값이 들어있다

   // len 변수 선언하고 매개변수로 들어온 Array 객체의 배열변수 개수를 구해 저장하기
   var len = arrObj.length;

   // len 변수안의 데이터가 undefined면  즉, 매개변수로 Array 객체가 안들어오고 
   // 다른 객체 즉, Checkbox 객체 또는 Radio 객체가 들어오면 
   // 존재하지 않는 length 라는 속성변수에는 undefined가 들어 있다 
   // Radio 객체 또는 Checkbox 객체의 메모리 위치주소값 상상도를 살펴봐야 한다 
   if(len == undefined) {
      if(arrObj.checked == false) {
         return 0;   // 체크박스 0개를 리턴 (체크가 안 됐으니까 0개 )
      }
      else {
         return 1;   // 체크박스 1개를 리턴 (어차피 체크박스 1개니까 체크 된 경우 1개)
      }
   }
   // 자바스크립트는 어떤 다른 객체가 갖고있는 속성변수를 달라고하면 에러가 안나고 undefined를 리턴한다
   // 자바스크립트는 어떤 객체가 소유하고 있지 않은 속성변수 달라고 하면 에러 안나고 undefined를 준다







   // Radio 또는 checkbox의 체크 개수가 저장되는 변수 checkedCnt 선언하고 0 저장
   var checkedCnt = 0;
   // 반복문 선언. 반복문은 0부터 len변수 안의 배열변수 개수 미만만큼 돈다 
   // 반복문을 돌려서 Array 객체의 배열변수 안에 저장된 Radio 객체 또는 checkbox 객체에 접근하기 위함
   for(var i = 0 ; i < len ; i++) {
      // 만약 i번째 배열변수 안에 Radio 객체 또는 checkbox 객체의 속성변수 checked에 
      // true 가 저장되어 있으면 checkedCnt 변수 안의 숫자를 1 증가 
      // 즉 i 번째 Radio 또는 checkbox 입력양식에 체크가 되어 있으면 
      // checkedCnt 변수 안의 숫자를 1 증가 
      if(arrObj[i].checked) {
         checkedCnt++;
      }
   }
   // checkedCnt 변수 안의 데이터 리턴하기. 즉 Radio 또는 checkbox 입력양식에 체크 개수 리턴하기
   return checkedCnt;

}
*/
function getCheckedCnt(arrObj) {

   var checkedCnt = 0;
   try {
      var len = arrObj.length  
   
      if (len == undefined) {
         if (arrObj.checked == false) {
            return 0;
         } else {
            return 1;
         }
      }

      for (var i = 0; i < len; i++) {
         if (arrObj[i].checked == true) { checkedCnt++; }
      }
   } catch (e) {
      alert("getCheckedCnt 함수 호출 시 에러가 발생했음");
      checkedCnt = 0;
   }
   return checkedCnt;
}


//--------------------------------------------------------------------
// 현재 시각의 요일을 리턴하는 함수 선언 
//--------------------------------------------------------------------
function getTodayWeek() {
   //--------------------------------------------------------------------
   // today 변수 선언. 현재 날짜를 관리하는 Date 객체 생성.
   // Date 객체의 메모리 위치 주소값을 today 변수에 저장 
   //--------------------------------------------------------------------
   var today = new Date();
   //--------------------------------------------------------------------
   // weekNo 변수 선언. Date 객체의 getDay 메서드 호출하여 현재 요일 번호 얻어
   // weekNo 변수에 저장하기 
   //--------------------------------------------------------------------
   var weekNo = today.getDay();
   //--------------------------------------------------------------------
   // week 변수 선언. "일요일" 저장하기
   //--------------------------------------------------------------------
   var week = "일요일";
   //--------------------------------------------------------------------
   // 요일 번호에 따라 week 변수에 오늘 요일 문자 저장하기 
   //--------------------------------------------------------------------
   if (weekNo == 1) {
      week = "월요일";
   }
   else if (weekNo == 2) {
      week = "화요일";
   }
   else if (weekNo == 3) {
      week = "수요일";
   }
   else if (weekNo == 4) {
      week = "목요일";
   }
   else if (weekNo == 5) {
      week = "금요일";
   }
   else if (weekNo == 6) {
      week = "토요일";
   }
   //--------------------------------------------------------------------
   // 오늘 요일 문자 리턴하기 
   //--------------------------------------------------------------------
   return week; 
}

/*
//--------------------------------------------------------------------
// 위 함수는 아래처럼도 가능하다 
//--------------------------------------------------------------------
function getTodayWeek() {
   return ["일요일","월요일", "화요일", "수요일","목요일","금요일","토요일"][new Date().getDay()]
}
*/


//--------------------------------------------------------------------
// 현재 시각의 년-월-일(요일) 을 문자로 리턴하는 함수 선언. 
//--------------------------------------------------------------------
function getTodayYMDW() {
   //----------------------------------
   // today 변수 선언. 현재 날짜를 관리하는 Date 객체 생성. 
   // Date 객체의 메모리 위치 주소값을 today 변수에 저장
   //----------------------------------
   var today = new Date();
   var year = today.getFullYear();
   var month = today.getMonth() + 1;
      if(month < 10) {
         month = "0" + month;
      }
   var date = today.getDate();
      if (date < 10) {
         date = "0" + date;
      }
   var week = getTodayWeek().replace("요일","");
   //----------------------------------
   // 현재 시각의 년-월-일(요일) 을 문자로 리턴하기. 
   //----------------------------------
   return year + "-" + month + "-" + date + "(" + week + ")";
}

//--------------------------------------------------------------------
// 매개변수로 들어온 날짜문자가 오늘날짜와 동일하면 true 리턴하는 함수
// 아니면 false 리턴 
//--------------------------------------------------------------------
function isToday(dateStr) {   // 날짜문자니까 dateStr
try {
   //--------------------------------------------------------------------
   // 변수 arr 선언. dateStr 매개변수 안의 날짜 문자를 - 기준으로 토막내어
   // Array 객체 안에 담기 
   //--------------------------------------------------------------------
   var arr = dateStr.split("-")  // 년-월-일을 배열변수로 쪼갬 
   //--------------------------------------------------------------------
   // Array 객체 안의 배열변수 안에 데이터 꺼내어 year,month,date 변수에 저장하기
   // String 객체의 trim 메서드 호출로 앞 뒤 공백 제거하기 
   //--------------------------------------------------------------------
   var year = arr[0];          // year = year.trim();
   var month = arr[1];       // month = month.trim();
   var date = arr[2];          // date = date.trim();
   //--------------------------------------------------------------------
   // parseInt 라는 내장 함수를 호출하여 
   // year , month , date 변수 안의 숫자문자를 정수 숫자로 바꾸기
   //--------------------------------------------------------------------
   year = parseInt(year,10);
   month = parseInt(month,10);
   date = parseInt(date,10);
   //--------------------------------------------------------------------
   // 변수 today 선언. 오늘 날짜를 관리하는 Date 객체 생성하고 
   // 메모리 위치 주소값을 변수 today에 저장하기 
   // Date 객체의 getFullYear 메서드를 호출하여 년도 얻어 변수 today_year에 저장하기
   // Date 객체의 getMonth 메서드를 호출하여 년도 얻어 변수 today_month에 저장하기
   // Date 객체의 getDate 메서드를 호출하여 년도 얻어 변수 today_date에 저장하기
   //--------------------------------------------------------------------
   var today = new Date();
   var today_year = today.getFullYear();
   var today_month = today.getMonth() + 1;
   var today_date = today.getDate(); 
   //--------------------------------------------------------------------
   // 매개변수로 들어온 년월일 이 오늘 날짜의 년월일과 동일하면 true 리턴하기
   // 아니면 false 리턴하기 
   //--------------------------------------------------------------------
   return year == today_year && month == today_month && date == today_date;
   }
   catch(e) {
      alert("isToday 에서 에러발생");
      return false;
   }

}

//--------------------------------------------------------------------
// 매개변수로 들어온 문자에서 모든 공백을 제거하고 난 후의 문자 리턴하기
//--------------------------------------------------------------------
function deleteBlank(str) {
try { 
   //------------------------------------------
   // 공백 제거한 문자를 저장할 변수 result 선언
   //------------------------------------------
   var result = "";
   //------------------------------------------
   // 반복문 돌리면서 매개변수로 들어온 문자열 중 한개씩 접근해서
   // 공백이 아닌 문자만 result 변수에 누적시키기    
   //------------------------------------------
   for(var i = 0; i < str.length; i++) {
      // 만약 i 번째 문자가 공백이 아니면 i 번째 문자를 result 변수에 누적시키기  
      if(str.charAt(i) != " ") {
         result = result + str.charAt(i);
         // 공백이 아닌 놈만 문자 하나하나 끄집어 내서 문자 누적
      }
   }
   //------------------------------------------
   // 변수 result 안의 데이터 리턴하기 
   //------------------------------------------
   return result;
   // return str.split(" ").join("");
   } catch(e) {
      alert("deleteBlank 함수에서 에러 발생")
      return str;
   }
}

//------------------------------------------------------------
// 주영일 get_dDay
//------------------------------------------------------------
function get_dDay(dateStr) {
   try {
      //------------------------------------------------------------
      // 변수 arr 선언. dateStr 매개변수 안의 날짜문자를 - 기준으로 분해하여 Array 객체 안에 담기
      //------------------------------------------------------------
      var arr = dateStr.split("-");
      //------------------------------------------------------------
      // Array 객체 안의 배열변수 안의 데이터 꺼내어 year, month, date 변수에 저장하기
      //------------------------------------------------------------
      var year = arr[0];
      var month = arr[1];
      var date = arr[2];
      //------------------------------------------------------------
      // deleteBlank 메소드 호출로 앞뒤 공백 제거
      //------------------------------------------------------------
      year = deleteBlank(year);
      month = deleteBlank(month);
      date = deleteBlank(date);
      //------------------------------------------------------------
      // parseInt 라는 내장 함수를 호출하여
      // year, month, date 변수 안의 숫자문자를 정수 숫자로 바꾸기
      //------------------------------------------------------------
      year = parseInt(year, 10)
      month = parseInt(month, 10)
      date = parseInt(date, 10)
      //------------------------------------------------------------
      // today변수 선언. 오늘 날짜를 저장
      //------------------------------------------------------------
      var today = new Date();
      //------------------------------------------------------------
      // furtureDay 선언. 매개변수로 들어온 날짜 저장
      // 월은 0부터 시작하기 때문에 -1
      //------------------------------------------------------------
      var furtureDay = new Date(year, month - 1, date);
      //------------------------------------------------------------
      // getTime으로 두 날짜에 차이를 구하고 Math.ceil로 소수점 삭제
      //------------------------------------------------------------
      var dDay = Math.ceil((furtureDay.getTime() - today.getTime()) / (1000 * 60 * 60 * 24));
      //------------------------------------------------------------
      // dDay에 저장된 데이터 리턴
      //------------------------------------------------------------
      return dDay;
   }
   catch (e) {
      alert("get_dDay 함수 호출 시 에러가 발생" + e.message)
      return -1;
   }
}


//------------------------------------------------------------
// 강사 get_dDay
//------------------------------------------------------------
function get_dDay(dateStr){
   try {
      //------------------------------------------------------------
      // 변수 arr 선언. dateStr 매개변수 안의 날짜 문자를 - 기준으로 토막내어
      // Array 객체 안에 담기
      //------------------------------------------------------------
      var arr = dateStr.split("-");
      //------------------------------------------------------------
      // Array 객체 안의 배열변수 안의 데이터 꺼내어 year,month,date 변수에 저장하기
      // String 객체의 trim 메서드 호출로 앞뒤 공백 제거하기
      //------------------------------------------------------------
      var year = arr[0];
      var month = arr[1];
      var date = arr[2];
      //------------------------------------------------------------
      // parseInt 라는 내장 함수를 호출하여
      // year , month , date 변수 안의 숫자문자를 정수 숫자로 바꾸기
      //------------------------------------------------------------
      year = parseInt(year,10);
      month = parseInt(month,10);
      date = parseInt(date,10);
      //------------------------------------------------------------
      // 임의의 날짜를 관리하는 Date 객체 생성하고 변수 xDay에 저장하기
      // 오늘 날짜를 관리하는 Date 객체 생성하고 변수 today에 저장하기
      //------------------------------------------------------------
      var xDay = new Date(year,month-1,date);
      var today = new Date();
      //------------------------------------------------------------
      // 오늘 날짜와 임의의 날짜의 차이를 일수로 얻고 소수점 첫째자리를 올린 후 
      // 변수 interval 에 저장하기 
      //------------------------------------------------------------
      var interval = (xDay.getTime()-today.getTime()) / (1000*60*60*24);
      //------------------------------------------------------------
      // interval 변수 안의 데이터 리턴하기
      //------------------------------------------------------------
      return Math.ceil(interval);
   }
   catch(e){
      alert("get_dDay 함수에서 에러발생" + e.message)
      return -1; // 0 이상 나오면 dDay가 있는거니까 
   }

}


//------------------------------------------------------------
// 매개변수로 들어온 한글 이름이 한글이면서 2~20자 사이면 true 리턴하는 함수 선언
// 아니면 false 리턴하기 
//------------------------------------------------------------
function isLanguage(isLanguage) {
   return isValidPattern(/^[가-힣a-zA-z]{2,20}$/, isLanguage);
}

function isCheck_id(mem_id) {
   return isValidPattern(/^[a-z][a-z0-9]{4,15}$/, mem_id);
}

function is_pwd(mem_pwd) {
   return isValidPattern(/^(?=.*[A-Za-z])(?=.*\d)(?=.*[~!@#$%^&*()+|=])[A-Za-z\d~!@#$%^&*()+|=]{8,16}$/, mem_pwd);
}

function is_Phone(콜) {
   return isValidPattern(/^(010|011|016|017|018|019)[0-9]{3,4}[0-9]{4}$/, phone);
}

function isCheck_Home(home){
   return isValidPattern(/[가-힣a-zA-z]{2,50}$/, home);
}
function isOnly_Number(number){
   return isValidPattern(/[0-9]{1,20}$/, number);
}


